
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.18.0
 * Query Engine version: 34b5a692b7bd79939a9a2c3ef97d816e749cda2f
 */
Prisma.prismaVersion = {
  client: "6.18.0",
  engine: "34b5a692b7bd79939a9a2c3ef97d816e749cda2f"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  provider: 'provider',
  password: 'password',
  resetPasswordToken: 'resetPasswordToken',
  confirmationToken: 'confirmationToken',
  confirmed: 'confirmed',
  blocked: 'blocked',
  phone: 'phone',
  firstName: 'firstName',
  lastName: 'lastName',
  position: 'position',
  companyName: 'companyName',
  country: 'country',
  linkedinUrl: 'linkedinUrl',
  twitterUrl: 'twitterUrl',
  websiteUrl: 'websiteUrl',
  githubUrl: 'githubUrl',
  avatarUrl: 'avatarUrl',
  language: 'language',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  avatarId: 'avatarId',
  idProvider: 'idProvider',
  resetPasswordExpires: 'resetPasswordExpires',
  theme: 'theme',
  defaultCompanyId: 'defaultCompanyId'
};

exports.Prisma.FileScalarFieldEnum = {
  id: 'id',
  name: 'name',
  url: 'url',
  publicId: 'publicId',
  format: 'format',
  version: 'version',
  mimeType: 'mimeType',
  size: 'size',
  userId: 'userId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AccountScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  type: 'type',
  provider: 'provider',
  providerAccountId: 'providerAccountId',
  refresh_token: 'refresh_token',
  access_token: 'access_token',
  expires_at: 'expires_at',
  token_type: 'token_type',
  scope: 'scope',
  id_token: 'id_token',
  session_state: 'session_state'
};

exports.Prisma.SessionScalarFieldEnum = {
  id: 'id',
  sessionToken: 'sessionToken',
  userId: 'userId',
  expires: 'expires'
};

exports.Prisma.VerificationTokenScalarFieldEnum = {
  identifier: 'identifier',
  token: 'token',
  expires: 'expires'
};

exports.Prisma.CompanyScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  tokenApi: 'tokenApi',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.KnowledgeItemScalarFieldEnum = {
  id: 'id',
  companyId: 'companyId',
  type: 'type',
  title: 'title',
  content: 'content',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  createdById: 'createdById'
};

exports.Prisma.QuickAnswerScalarFieldEnum = {
  id: 'id',
  companyId: 'companyId',
  title: 'title',
  content: 'content',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  createdById: 'createdById'
};

exports.Prisma.AiTemplateScalarFieldEnum = {
  id: 'id',
  companyId: 'companyId',
  name: 'name',
  content: 'content',
  category: 'category',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  createdById: 'createdById'
};

exports.Prisma.AiTemplateOptionScalarFieldEnum = {
  id: 'id',
  templateId: 'templateId',
  label: 'label',
  value: 'value',
  createdAt: 'createdAt'
};

exports.Prisma.CompanyMemberScalarFieldEnum = {
  id: 'id',
  isAdmin: 'isAdmin',
  canPost: 'canPost',
  canApprove: 'canApprove',
  isOwner: 'isOwner',
  companyMemberStatus: 'companyMemberStatus',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  userId: 'userId',
  companyId: 'companyId'
};

exports.Prisma.SubscriptionPlanScalarFieldEnum = {
  id: 'id',
  planType: 'planType',
  stripeProductId: 'stripeProductId',
  stripePriceIdMonthly: 'stripePriceIdMonthly',
  stripePriceIdYearly: 'stripePriceIdYearly',
  priceMonthly: 'priceMonthly',
  priceYearly: 'priceYearly',
  currency: 'currency',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CustomerSubscriptionScalarFieldEnum = {
  id: 'id',
  companyId: 'companyId',
  planId: 'planId',
  status: 'status',
  billingInterval: 'billingInterval',
  stripeCustomerId: 'stripeCustomerId',
  stripeSubscriptionId: 'stripeSubscriptionId',
  cancellationDetails: 'cancellationDetails',
  currentPeriodStart: 'currentPeriodStart',
  currentPeriodEnd: 'currentPeriodEnd',
  cancelAtPeriodEnd: 'cancelAtPeriodEnd',
  trialStart: 'trialStart',
  trialEnd: 'trialEnd',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UsageTrackingScalarFieldEnum = {
  id: 'id',
  companyId: 'companyId',
  subscriptionId: 'subscriptionId',
  metricType: 'metricType',
  currentUsage: 'currentUsage',
  limitValue: 'limitValue',
  periodStart: 'periodStart',
  periodEnd: 'periodEnd',
  lastResetDate: 'lastResetDate',
  lastUpdated: 'lastUpdated',
  createdAt: 'createdAt'
};

exports.Prisma.CompanySettingsScalarFieldEnum = {
  id: 'id',
  companyId: 'companyId',
  emailNotifications: 'emailNotifications',
  newMessageAlerts: 'newMessageAlerts',
  dailyReports: 'dailyReports',
  autoReply: 'autoReply',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CompanyWhatsappNumberScalarFieldEnum = {
  id: 'id',
  companyId: 'companyId',
  displayName: 'displayName',
  phoneNumber: 'phoneNumber',
  isConnected: 'isConnected',
  messagesThisMonth: 'messagesThisMonth',
  lastSyncedAt: 'lastSyncedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.InboxCustomerScalarFieldEnum = {
  id: 'id',
  companyId: 'companyId',
  name: 'name',
  phone: 'phone',
  email: 'email',
  address: 'address',
  notes: 'notes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.InboxConversationScalarFieldEnum = {
  id: 'id',
  companyId: 'companyId',
  customerId: 'customerId',
  subject: 'subject',
  lastMessagePreview: 'lastMessagePreview',
  lastMessageSentAt: 'lastMessageSentAt',
  unreadCount: 'unreadCount',
  priority: 'priority',
  satisfactionScore: 'satisfactionScore',
  tags: 'tags',
  assignedToId: 'assignedToId',
  isArchived: 'isArchived',
  archivedAt: 'archivedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.InboxMessageScalarFieldEnum = {
  id: 'id',
  companyId: 'companyId',
  conversationId: 'conversationId',
  senderType: 'senderType',
  senderUserId: 'senderUserId',
  content: 'content',
  attachments: 'attachments',
  status: 'status',
  sentAt: 'sentAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.KnowledgeItemType = exports.$Enums.KnowledgeItemType = {
  TEXT: 'TEXT',
  URL: 'URL'
};

exports.AiTemplateCategory = exports.$Enums.AiTemplateCategory = {
  greeting: 'greeting',
  orders: 'orders',
  products: 'products',
  support: 'support',
  closing: 'closing'
};

exports.InboxMessageSenderType = exports.$Enums.InboxMessageSenderType = {
  customer: 'customer',
  agent: 'agent',
  bot: 'bot',
  system: 'system'
};

exports.InboxMessageStatus = exports.$Enums.InboxMessageStatus = {
  pending: 'pending',
  sent: 'sent',
  delivered: 'delivered',
  read: 'read',
  failed: 'failed'
};

exports.InboxConversationPriority = exports.$Enums.InboxConversationPriority = {
  low: 'low',
  medium: 'medium',
  high: 'high'
};

exports.Language = exports.$Enums.Language = {
  en: 'en',
  pt_BR: 'pt_BR'
};

exports.Provider = exports.$Enums.Provider = {
  google: 'google',
  local: 'local'
};

exports.CompanyMemberStatus = exports.$Enums.CompanyMemberStatus = {
  invited: 'invited',
  accepted: 'accepted',
  rejected: 'rejected'
};

exports.Theme = exports.$Enums.Theme = {
  light: 'light',
  dark: 'dark',
  system: 'system'
};

exports.PlanType = exports.$Enums.PlanType = {
  FREE: 'FREE',
  STARTER: 'STARTER',
  PRO: 'PRO',
  BUSINESS: 'BUSINESS',
  ENTERPRISE: 'ENTERPRISE'
};

exports.BillingInterval = exports.$Enums.BillingInterval = {
  monthly: 'monthly',
  yearly: 'yearly'
};

exports.SubscriptionStatus = exports.$Enums.SubscriptionStatus = {
  pending: 'pending',
  active: 'active',
  canceled: 'canceled',
  past_due: 'past_due',
  trialing: 'trialing',
  incomplete: 'incomplete',
  incomplete_expired: 'incomplete_expired',
  unpaid: 'unpaid'
};

exports.UsageMetricType = exports.$Enums.UsageMetricType = {
  ACTIVE_SURVEYS: 'ACTIVE_SURVEYS',
  TOTAL_COMPLETED_RESPONSES: 'TOTAL_COMPLETED_RESPONSES'
};

exports.Prisma.ModelName = {
  User: 'User',
  File: 'File',
  Account: 'Account',
  Session: 'Session',
  VerificationToken: 'VerificationToken',
  Company: 'Company',
  KnowledgeItem: 'KnowledgeItem',
  QuickAnswer: 'QuickAnswer',
  AiTemplate: 'AiTemplate',
  AiTemplateOption: 'AiTemplateOption',
  CompanyMember: 'CompanyMember',
  SubscriptionPlan: 'SubscriptionPlan',
  CustomerSubscription: 'CustomerSubscription',
  UsageTracking: 'UsageTracking',
  CompanySettings: 'CompanySettings',
  CompanyWhatsappNumber: 'CompanyWhatsappNumber',
  InboxCustomer: 'InboxCustomer',
  InboxConversation: 'InboxConversation',
  InboxMessage: 'InboxMessage'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/home/rafael/Documents/projects/botinho/lib/generated/prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "debian-openssl-3.0.x",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/home/rafael/Documents/projects/botinho/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.18.0",
  "engineVersion": "34b5a692b7bd79939a9a2c3ef97d816e749cda2f",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": true,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider        = \"prisma-client-js\"\n  output          = \"../lib/generated/prisma\"\n  previewFeatures = []\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  id                         Int                 @id @default(autoincrement())\n  email                      String              @unique\n  provider                   Provider            @default(local)\n  password                   String?\n  resetPasswordToken         String?\n  confirmationToken          String?\n  confirmed                  Boolean?\n  blocked                    Boolean?\n  phone                      String?\n  firstName                  String\n  lastName                   String?\n  position                   String?\n  companyName                String?\n  country                    String?\n  linkedinUrl                String?\n  twitterUrl                 String?\n  websiteUrl                 String?\n  githubUrl                  String?\n  avatarUrl                  String?\n  language                   Language\n  createdAt                  DateTime            @default(now())\n  updatedAt                  DateTime            @updatedAt\n  avatarId                   String?\n  idProvider                 String?\n  resetPasswordExpires       DateTime?\n  theme                      Theme               @default(system)\n  defaultCompanyId           Int?\n  accounts                   Account[]\n  sessions                   Session[]\n  companyMembers             CompanyMember[]     @relation(\"UserCompanyMembers\")\n  avatar                     File?               @relation(\"UserAvatar\", fields: [avatarId], references: [id], onDelete: Cascade)\n  company                    Company?            @relation(\"UserDefaultCompany\", fields: [defaultCompanyId], references: [id])\n  files                      File[]              @relation(\"UserFile\")\n  knowledgeItems             KnowledgeItem[]\n  quickAnswers               QuickAnswer[]\n  aiTemplates                AiTemplate[]\n  assignedInboxConversations InboxConversation[] @relation(\"InboxConversationAssignedUser\")\n  inboxMessages              InboxMessage[]      @relation(\"InboxMessageSenderUser\")\n\n  @@index([email])\n  @@index([phone])\n  @@index([resetPasswordToken])\n  @@index([confirmationToken])\n  @@index([defaultCompanyId])\n  @@index([createdAt])\n  @@map(\"users\")\n}\n\nmodel File {\n  id        String   @id @default(cuid())\n  name      String\n  url       String\n  publicId  String?\n  format    String?\n  version   String?\n  mimeType  String?\n  size      Int?\n  userId    Int?\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n  avatarFor User[]   @relation(\"UserAvatar\")\n  user      User?    @relation(\"UserFile\", fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([id])\n  @@index([userId])\n  @@map(\"files\")\n}\n\nmodel Account {\n  id                String  @id @default(cuid())\n  userId            Int\n  type              String\n  provider          String\n  providerAccountId String\n  refresh_token     String?\n  access_token      String?\n  expires_at        Int?\n  token_type        String?\n  scope             String?\n  id_token          String?\n  session_state     String?\n  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([provider, providerAccountId])\n  @@map(\"accounts\")\n}\n\nmodel Session {\n  id           String   @id @default(cuid())\n  sessionToken String   @unique\n  userId       Int\n  expires      DateTime\n  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"sessions\")\n}\n\nmodel VerificationToken {\n  identifier String\n  token      String   @unique\n  expires    DateTime\n\n  @@unique([identifier, token])\n  @@map(\"verification_tokens\")\n}\n\nmodel Company {\n  id                   Int                     @id @default(autoincrement())\n  name                 String\n  description          String?\n  tokenApi             String?\n  createdAt            DateTime                @default(now())\n  updatedAt            DateTime                @updatedAt\n  members              CompanyMember[]         @relation(\"CompanyMembers\")\n  user                 User[]                  @relation(\"UserDefaultCompany\")\n  CustomerSubscription CustomerSubscription[]\n  UsageTracking        UsageTracking[]\n  knowledgeItems       KnowledgeItem[]\n  quickAnswers         QuickAnswer[]\n  aiTemplates          AiTemplate[]\n  inboxCustomers       InboxCustomer[]\n  inboxConversations   InboxConversation[]\n  inboxMessages        InboxMessage[]\n  settings             CompanySettings?\n  whatsappNumbers      CompanyWhatsappNumber[]\n\n  @@index([createdAt])\n  @@map(\"companies\")\n}\n\nmodel KnowledgeItem {\n  id          String            @id @default(cuid())\n  companyId   Int\n  type        KnowledgeItemType\n  title       String\n  content     String\n  createdAt   DateTime          @default(now())\n  updatedAt   DateTime          @updatedAt\n  createdById Int?\n  company     Company           @relation(fields: [companyId], references: [id], onDelete: Cascade)\n  createdBy   User?             @relation(fields: [createdById], references: [id], onDelete: SetNull)\n\n  @@index([companyId])\n  @@index([createdAt])\n  @@map(\"knowledge_items\")\n}\n\nmodel QuickAnswer {\n  id          String   @id @default(cuid())\n  companyId   Int\n  title       String\n  content     String\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n  createdById Int?\n  company     Company  @relation(fields: [companyId], references: [id], onDelete: Cascade)\n  createdBy   User?    @relation(fields: [createdById], references: [id], onDelete: SetNull)\n\n  @@index([companyId])\n  @@index([createdAt])\n  @@map(\"quick_answers\")\n}\n\nmodel AiTemplate {\n  id          String             @id @default(cuid())\n  companyId   Int\n  name        String\n  content     String\n  category    AiTemplateCategory\n  createdAt   DateTime           @default(now())\n  updatedAt   DateTime           @updatedAt\n  createdById Int?\n  company     Company            @relation(fields: [companyId], references: [id], onDelete: Cascade)\n  createdBy   User?              @relation(fields: [createdById], references: [id], onDelete: SetNull)\n  options     AiTemplateOption[]\n\n  @@index([companyId])\n  @@index([createdAt])\n  @@map(\"ai_templates\")\n}\n\nmodel AiTemplateOption {\n  id         String     @id @default(cuid())\n  templateId String\n  label      String\n  value      String\n  createdAt  DateTime   @default(now())\n  template   AiTemplate @relation(fields: [templateId], references: [id], onDelete: Cascade)\n\n  @@index([templateId])\n  @@map(\"ai_template_options\")\n}\n\nenum KnowledgeItemType {\n  TEXT\n  URL\n}\n\nenum AiTemplateCategory {\n  greeting\n  orders\n  products\n  support\n  closing\n}\n\nenum InboxMessageSenderType {\n  customer\n  agent\n  bot\n  system\n}\n\nenum InboxMessageStatus {\n  pending\n  sent\n  delivered\n  read\n  failed\n}\n\nenum InboxConversationPriority {\n  low\n  medium\n  high\n}\n\nmodel CompanyMember {\n  id                  Int                 @id @default(autoincrement())\n  isAdmin             Boolean\n  canPost             Boolean\n  canApprove          Boolean\n  isOwner             Boolean\n  companyMemberStatus CompanyMemberStatus\n  createdAt           DateTime            @default(now())\n  updatedAt           DateTime            @updatedAt\n  userId              Int\n  companyId           Int\n  company             Company             @relation(\"CompanyMembers\", fields: [companyId], references: [id])\n  user                User                @relation(\"UserCompanyMembers\", fields: [userId], references: [id])\n\n  @@unique([userId, companyId])\n  @@index([userId])\n  @@index([companyId])\n  @@index([companyMemberStatus])\n  @@index([isAdmin])\n  @@index([isOwner])\n  @@map(\"company_members\")\n}\n\nmodel SubscriptionPlan {\n  id                   String                 @id @default(cuid())\n  planType             PlanType\n  stripeProductId      String?\n  stripePriceIdMonthly String?\n  stripePriceIdYearly  String?\n  priceMonthly         Decimal                @default(0) @db.Decimal(10, 2)\n  priceYearly          Decimal                @default(0) @db.Decimal(10, 2)\n  currency             String                 @default(\"USD\")\n  isActive             Boolean                @default(true)\n  createdAt            DateTime               @default(now())\n  updatedAt            DateTime               @updatedAt\n  subscriptions        CustomerSubscription[]\n\n  @@index([planType])\n  @@index([isActive])\n  @@map(\"subscription_plans\")\n}\n\nmodel CustomerSubscription {\n  id                   String             @id @default(cuid())\n  companyId            Int\n  planId               String\n  status               SubscriptionStatus @default(active)\n  billingInterval      BillingInterval    @default(monthly)\n  stripeCustomerId     String?\n  stripeSubscriptionId String?            @unique\n  cancellationDetails  String?\n  currentPeriodStart   DateTime?\n  currentPeriodEnd     DateTime?\n  cancelAtPeriodEnd    Boolean            @default(false)\n  trialStart           DateTime?\n  trialEnd             DateTime?\n  createdAt            DateTime           @default(now())\n  updatedAt            DateTime           @updatedAt\n  company              Company            @relation(fields: [companyId], references: [id], onDelete: Cascade)\n  plan                 SubscriptionPlan   @relation(fields: [planId], references: [id])\n  usageTracking        UsageTracking[]\n\n  @@index([companyId])\n  @@index([planId])\n  @@index([status])\n  @@index([stripeCustomerId])\n  @@index([stripeSubscriptionId])\n  @@index([currentPeriodEnd])\n  @@index([billingInterval])\n  @@index([companyId, status])\n  @@map(\"customer_subscriptions\")\n}\n\nmodel UsageTracking {\n  id             String               @id @default(cuid())\n  companyId      Int\n  subscriptionId String\n  metricType     UsageMetricType\n  currentUsage   Int                  @default(0)\n  limitValue     Int\n  periodStart    DateTime             @default(now())\n  periodEnd      DateTime\n  lastResetDate  DateTime?\n  lastUpdated    DateTime             @default(now())\n  createdAt      DateTime             @default(now())\n  company        Company              @relation(fields: [companyId], references: [id], onDelete: Cascade)\n  subscription   CustomerSubscription @relation(fields: [subscriptionId], references: [id], onDelete: Cascade)\n\n  @@unique([companyId, metricType, periodStart])\n  @@index([companyId])\n  @@index([subscriptionId])\n  @@index([metricType])\n  @@index([periodStart])\n  @@index([periodEnd])\n  @@index([lastUpdated])\n  @@map(\"usage_tracking\")\n}\n\nmodel CompanySettings {\n  id                 Int      @id @default(autoincrement())\n  companyId          Int      @unique\n  emailNotifications Boolean  @default(true)\n  newMessageAlerts   Boolean  @default(true)\n  dailyReports       Boolean  @default(false)\n  autoReply          Boolean  @default(true)\n  createdAt          DateTime @default(now())\n  updatedAt          DateTime @updatedAt\n  company            Company  @relation(fields: [companyId], references: [id], onDelete: Cascade)\n\n  @@map(\"company_settings\")\n}\n\nmodel CompanyWhatsappNumber {\n  id                String    @id @default(cuid())\n  companyId         Int\n  displayName       String\n  phoneNumber       String\n  isConnected       Boolean   @default(false)\n  messagesThisMonth Int       @default(0)\n  lastSyncedAt      DateTime?\n  createdAt         DateTime  @default(now())\n  updatedAt         DateTime  @updatedAt\n  company           Company   @relation(fields: [companyId], references: [id], onDelete: Cascade)\n\n  @@unique([companyId, phoneNumber])\n  @@index([companyId])\n  @@map(\"company_whatsapp_numbers\")\n}\n\nenum Language {\n  en\n  pt_BR\n}\n\nenum Provider {\n  google\n  local\n}\n\nenum CompanyMemberStatus {\n  invited\n  accepted\n  rejected\n}\n\nenum Theme {\n  light\n  dark\n  system\n}\n\nenum PlanType {\n  FREE\n  STARTER\n  PRO\n  BUSINESS\n  ENTERPRISE\n}\n\nenum BillingInterval {\n  monthly\n  yearly\n}\n\nenum SubscriptionStatus {\n  pending\n  active\n  canceled\n  past_due\n  trialing\n  incomplete\n  incomplete_expired\n  unpaid\n}\n\nenum UsageMetricType {\n  ACTIVE_SURVEYS\n  TOTAL_COMPLETED_RESPONSES\n}\n\nmodel InboxCustomer {\n  id            String              @id @default(cuid())\n  companyId     Int\n  name          String\n  phone         String?\n  email         String?\n  address       String?\n  notes         String?\n  createdAt     DateTime            @default(now())\n  updatedAt     DateTime            @updatedAt\n  company       Company             @relation(fields: [companyId], references: [id], onDelete: Cascade)\n  conversations InboxConversation[]\n\n  @@unique([companyId, phone], map: \"inbox_customer_company_phone_unique\")\n  @@unique([companyId, email], map: \"inbox_customer_company_email_unique\")\n  @@index([companyId])\n  @@map(\"inbox_customers\")\n}\n\nmodel InboxConversation {\n  id                 String                    @id @default(cuid())\n  companyId          Int\n  customerId         String\n  subject            String?\n  lastMessagePreview String?\n  lastMessageSentAt  DateTime?\n  unreadCount        Int                       @default(0)\n  priority           InboxConversationPriority @default(medium)\n  satisfactionScore  Int?\n  tags               String[]                  @default([])\n  assignedToId       Int?\n  isArchived         Boolean                   @default(false)\n  archivedAt         DateTime?\n  createdAt          DateTime                  @default(now())\n  updatedAt          DateTime                  @updatedAt\n  company            Company                   @relation(fields: [companyId], references: [id], onDelete: Cascade)\n  customer           InboxCustomer             @relation(fields: [customerId], references: [id], onDelete: Cascade)\n  assignedTo         User?                     @relation(\"InboxConversationAssignedUser\", fields: [assignedToId], references: [id], onDelete: SetNull)\n  messages           InboxMessage[]\n\n  @@index([companyId])\n  @@index([customerId])\n  @@index([assignedToId])\n  @@index([isArchived])\n  @@index([lastMessageSentAt])\n  @@map(\"inbox_conversations\")\n}\n\nmodel InboxMessage {\n  id             String                 @id @default(cuid())\n  companyId      Int\n  conversationId String\n  senderType     InboxMessageSenderType\n  senderUserId   Int?\n  content        String\n  attachments    Json?\n  status         InboxMessageStatus     @default(sent)\n  sentAt         DateTime               @default(now())\n  createdAt      DateTime               @default(now())\n  updatedAt      DateTime               @updatedAt\n  company        Company                @relation(fields: [companyId], references: [id], onDelete: Cascade)\n  conversation   InboxConversation      @relation(fields: [conversationId], references: [id], onDelete: Cascade)\n  senderUser     User?                  @relation(\"InboxMessageSenderUser\", fields: [senderUserId], references: [id], onDelete: SetNull)\n\n  @@index([companyId])\n  @@index([conversationId])\n  @@index([sentAt])\n  @@map(\"inbox_messages\")\n}\n",
  "inlineSchemaHash": "805d32aebe004fa27d047e34fadac2e5cb6ab67c90e18727796d5f21b2200833",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"provider\",\"kind\":\"enum\",\"type\":\"Provider\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"resetPasswordToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"confirmationToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"confirmed\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"blocked\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"position\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"companyName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"country\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"linkedinUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"twitterUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"websiteUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"githubUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"avatarUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"language\",\"kind\":\"enum\",\"type\":\"Language\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"avatarId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"idProvider\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"resetPasswordExpires\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"theme\",\"kind\":\"enum\",\"type\":\"Theme\"},{\"name\":\"defaultCompanyId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"accounts\",\"kind\":\"object\",\"type\":\"Account\",\"relationName\":\"AccountToUser\"},{\"name\":\"sessions\",\"kind\":\"object\",\"type\":\"Session\",\"relationName\":\"SessionToUser\"},{\"name\":\"companyMembers\",\"kind\":\"object\",\"type\":\"CompanyMember\",\"relationName\":\"UserCompanyMembers\"},{\"name\":\"avatar\",\"kind\":\"object\",\"type\":\"File\",\"relationName\":\"UserAvatar\"},{\"name\":\"company\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"UserDefaultCompany\"},{\"name\":\"files\",\"kind\":\"object\",\"type\":\"File\",\"relationName\":\"UserFile\"},{\"name\":\"knowledgeItems\",\"kind\":\"object\",\"type\":\"KnowledgeItem\",\"relationName\":\"KnowledgeItemToUser\"},{\"name\":\"quickAnswers\",\"kind\":\"object\",\"type\":\"QuickAnswer\",\"relationName\":\"QuickAnswerToUser\"},{\"name\":\"aiTemplates\",\"kind\":\"object\",\"type\":\"AiTemplate\",\"relationName\":\"AiTemplateToUser\"},{\"name\":\"assignedInboxConversations\",\"kind\":\"object\",\"type\":\"InboxConversation\",\"relationName\":\"InboxConversationAssignedUser\"},{\"name\":\"inboxMessages\",\"kind\":\"object\",\"type\":\"InboxMessage\",\"relationName\":\"InboxMessageSenderUser\"}],\"dbName\":\"users\"},\"File\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"publicId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"format\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"version\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mimeType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"size\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"avatarFor\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserAvatar\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserFile\"}],\"dbName\":\"files\"},\"Account\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"provider\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"providerAccountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"refresh_token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"access_token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expires_at\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"token_type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"scope\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"id_token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"session_state\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AccountToUser\"}],\"dbName\":\"accounts\"},\"Session\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sessionToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"expires\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SessionToUser\"}],\"dbName\":\"sessions\"},\"VerificationToken\":{\"fields\":[{\"name\":\"identifier\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expires\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"verification_tokens\"},\"Company\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tokenApi\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"members\",\"kind\":\"object\",\"type\":\"CompanyMember\",\"relationName\":\"CompanyMembers\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserDefaultCompany\"},{\"name\":\"CustomerSubscription\",\"kind\":\"object\",\"type\":\"CustomerSubscription\",\"relationName\":\"CompanyToCustomerSubscription\"},{\"name\":\"UsageTracking\",\"kind\":\"object\",\"type\":\"UsageTracking\",\"relationName\":\"CompanyToUsageTracking\"},{\"name\":\"knowledgeItems\",\"kind\":\"object\",\"type\":\"KnowledgeItem\",\"relationName\":\"CompanyToKnowledgeItem\"},{\"name\":\"quickAnswers\",\"kind\":\"object\",\"type\":\"QuickAnswer\",\"relationName\":\"CompanyToQuickAnswer\"},{\"name\":\"aiTemplates\",\"kind\":\"object\",\"type\":\"AiTemplate\",\"relationName\":\"AiTemplateToCompany\"},{\"name\":\"inboxCustomers\",\"kind\":\"object\",\"type\":\"InboxCustomer\",\"relationName\":\"CompanyToInboxCustomer\"},{\"name\":\"inboxConversations\",\"kind\":\"object\",\"type\":\"InboxConversation\",\"relationName\":\"CompanyToInboxConversation\"},{\"name\":\"inboxMessages\",\"kind\":\"object\",\"type\":\"InboxMessage\",\"relationName\":\"CompanyToInboxMessage\"},{\"name\":\"settings\",\"kind\":\"object\",\"type\":\"CompanySettings\",\"relationName\":\"CompanyToCompanySettings\"},{\"name\":\"whatsappNumbers\",\"kind\":\"object\",\"type\":\"CompanyWhatsappNumber\",\"relationName\":\"CompanyToCompanyWhatsappNumber\"}],\"dbName\":\"companies\"},\"KnowledgeItem\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"companyId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"KnowledgeItemType\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdById\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"company\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CompanyToKnowledgeItem\"},{\"name\":\"createdBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"KnowledgeItemToUser\"}],\"dbName\":\"knowledge_items\"},\"QuickAnswer\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"companyId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdById\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"company\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CompanyToQuickAnswer\"},{\"name\":\"createdBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"QuickAnswerToUser\"}],\"dbName\":\"quick_answers\"},\"AiTemplate\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"companyId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"enum\",\"type\":\"AiTemplateCategory\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdById\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"company\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"AiTemplateToCompany\"},{\"name\":\"createdBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AiTemplateToUser\"},{\"name\":\"options\",\"kind\":\"object\",\"type\":\"AiTemplateOption\",\"relationName\":\"AiTemplateToAiTemplateOption\"}],\"dbName\":\"ai_templates\"},\"AiTemplateOption\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"templateId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"label\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"template\",\"kind\":\"object\",\"type\":\"AiTemplate\",\"relationName\":\"AiTemplateToAiTemplateOption\"}],\"dbName\":\"ai_template_options\"},\"CompanyMember\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isAdmin\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"canPost\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"canApprove\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isOwner\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"companyMemberStatus\",\"kind\":\"enum\",\"type\":\"CompanyMemberStatus\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"companyId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"company\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CompanyMembers\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserCompanyMembers\"}],\"dbName\":\"company_members\"},\"SubscriptionPlan\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"planType\",\"kind\":\"enum\",\"type\":\"PlanType\"},{\"name\":\"stripeProductId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stripePriceIdMonthly\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stripePriceIdYearly\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"priceMonthly\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"priceYearly\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"subscriptions\",\"kind\":\"object\",\"type\":\"CustomerSubscription\",\"relationName\":\"CustomerSubscriptionToSubscriptionPlan\"}],\"dbName\":\"subscription_plans\"},\"CustomerSubscription\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"companyId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"planId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"SubscriptionStatus\"},{\"name\":\"billingInterval\",\"kind\":\"enum\",\"type\":\"BillingInterval\"},{\"name\":\"stripeCustomerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stripeSubscriptionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cancellationDetails\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"currentPeriodStart\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"currentPeriodEnd\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"cancelAtPeriodEnd\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"trialStart\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"trialEnd\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"company\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CompanyToCustomerSubscription\"},{\"name\":\"plan\",\"kind\":\"object\",\"type\":\"SubscriptionPlan\",\"relationName\":\"CustomerSubscriptionToSubscriptionPlan\"},{\"name\":\"usageTracking\",\"kind\":\"object\",\"type\":\"UsageTracking\",\"relationName\":\"CustomerSubscriptionToUsageTracking\"}],\"dbName\":\"customer_subscriptions\"},\"UsageTracking\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"companyId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"subscriptionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metricType\",\"kind\":\"enum\",\"type\":\"UsageMetricType\"},{\"name\":\"currentUsage\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"limitValue\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"periodStart\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"periodEnd\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lastResetDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lastUpdated\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"company\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CompanyToUsageTracking\"},{\"name\":\"subscription\",\"kind\":\"object\",\"type\":\"CustomerSubscription\",\"relationName\":\"CustomerSubscriptionToUsageTracking\"}],\"dbName\":\"usage_tracking\"},\"CompanySettings\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"companyId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"emailNotifications\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"newMessageAlerts\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"dailyReports\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"autoReply\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"company\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CompanyToCompanySettings\"}],\"dbName\":\"company_settings\"},\"CompanyWhatsappNumber\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"companyId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"displayName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phoneNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isConnected\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"messagesThisMonth\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"lastSyncedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"company\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CompanyToCompanyWhatsappNumber\"}],\"dbName\":\"company_whatsapp_numbers\"},\"InboxCustomer\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"companyId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"company\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CompanyToInboxCustomer\"},{\"name\":\"conversations\",\"kind\":\"object\",\"type\":\"InboxConversation\",\"relationName\":\"InboxConversationToInboxCustomer\"}],\"dbName\":\"inbox_customers\"},\"InboxConversation\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"companyId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"customerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"subject\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastMessagePreview\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastMessageSentAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"unreadCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"priority\",\"kind\":\"enum\",\"type\":\"InboxConversationPriority\"},{\"name\":\"satisfactionScore\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"tags\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"assignedToId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isArchived\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"archivedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"company\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CompanyToInboxConversation\"},{\"name\":\"customer\",\"kind\":\"object\",\"type\":\"InboxCustomer\",\"relationName\":\"InboxConversationToInboxCustomer\"},{\"name\":\"assignedTo\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"InboxConversationAssignedUser\"},{\"name\":\"messages\",\"kind\":\"object\",\"type\":\"InboxMessage\",\"relationName\":\"InboxConversationToInboxMessage\"}],\"dbName\":\"inbox_conversations\"},\"InboxMessage\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"companyId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"conversationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"senderType\",\"kind\":\"enum\",\"type\":\"InboxMessageSenderType\"},{\"name\":\"senderUserId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"attachments\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"InboxMessageStatus\"},{\"name\":\"sentAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"company\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CompanyToInboxMessage\"},{\"name\":\"conversation\",\"kind\":\"object\",\"type\":\"InboxConversation\",\"relationName\":\"InboxConversationToInboxMessage\"},{\"name\":\"senderUser\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"InboxMessageSenderUser\"}],\"dbName\":\"inbox_messages\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

