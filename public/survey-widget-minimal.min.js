class n{constructor(n={}){this.survey=n.surveyData,this.container=null,this.currentIndex=0,this.responses=[],this.onComplete=n.onComplete||(()=>{}),this.onClose=n.onClose||(()=>{}),this.isCompleted=!1,this.survey&&this.render()}render(){if(!this.container)return
if(this.isCompleted||this.currentIndex>=this.survey.questions.length)return void this.renderComplete()
const n=this.survey.questions[this.currentIndex]
this.container.innerHTML=`\n            <div class="survey-widget">\n                <div class="survey-card">\n                    <div class="survey-close-btn" onclick="window.swMinimal.close()">\n                        <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">\n                            <path d="M18 6L6 18"/>\n                            <path d="M6 6l12 12"/>\n                        </svg>\n                    </div>\n                    \n                    <div class="survey-content">\n                        <div class="question-container">\n                            <h2 class="question-title">\n                                ${n.title}\n                                ${n.required?'<span class="question-required">*</span>':""}\n                            </h2>\n                            ${n.description&&"STATEMENT"!==n.format?`<p class="question-description">${n.description}</p>`:""}\n                            <div class="question-options">\n                                ${this.renderQuestion(n)}\n                            </div>\n                        </div>\n                    </div>\n                    \n                    <div class="survey-footer">\n                        <div class="survey-navigation">\n                            ${this.currentIndex>0?'\n                                <button class="survey-btn survey-btn-outline" onclick="window.swMinimal.prev()">\n                                    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">\n                                        <path d="m15 18-6-6 6-6"/>\n                                    </svg>\n                                </button>\n                            ':""}\n                            <button class="survey-btn survey-btn-primary" onclick="window.swMinimal.next()">\n                                ${this.currentIndex===this.survey.questions.length-1?'\n                                    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">\n                                        <path d="m22 2-7 20-4-9-9-4Z"/>\n                                        <path d="M22 2 11 13"/>\n                                    </svg>\n                                ':'\n                                    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">\n                                        <path d="m9 18 6-6-6-6"/>\n                                    </svg>\n                                '}\n                            </button>\n                        </div>\n                        \n                        <div class="survey-branding">\n                            <div class="survey-branding-text">\n                                <p>Powered by <a href="https://opineeo.com" target="_blank"><strong>Opineeo</strong></a></p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            \n            <style>\n                .survey-widget {\n                    min-width: 300px;\n                    min-height: 300px;\n                    color: inherit;\n                    font-family: inherit;\n                }\n                \n                .survey-card {\n                    background: transparent;\n                    color: #222222;\n                    border: 1px solid #222222;\n                    border-radius: 6px;\n                    margin: 16px 0px;\n                    padding: 16px;\n                    box-shadow: 0 10px 15px -3px rgba(0,0,0,0.1), 0 4px 6px -2px rgba(0,0,0,0.05);\n                    max-width: 300px;\n                    min-height: 300px;\n                    display: flex;\n                    flex-direction: column;\n                    justify-content: space-between;\n                    overflow: hidden;\n                    position: relative;\n                }\n                \n                .survey-close-btn {\n                    position: absolute;\n                    top: 0.25rem;\n                    right: 0.25rem;\n                    width: 32px;\n                    height: 32px;\n                    border-radius: 50%;\n                    display: flex;\n                    align-items: center;\n                    justify-content: center;\n                    cursor: pointer;\n                    opacity: 0.7;\n                    background: transparent;\n                    border: none;\n                    color: inherit;\n                }\n                \n                .survey-close-btn:hover {\n                    opacity: 1;\n                }\n                \n                .survey-content {\n                    padding: 0.5rem;\n                    margin-bottom: 1rem;\n                    overflow: hidden;\n                    position: relative;\n                }\n                \n                .question-container {\n                    width: 100%;\n                    height: 100%;\n                    padding: 0 4px;\n                }\n                \n                .question-title {\n                    font-weight: 600;\n                    margin-bottom: 0.5rem;\n                    color: inherit;\n                    font-size: 18px;\n                }\n                \n                .question-description {\n                    opacity: 0.8;\n                    margin-bottom: 1rem;\n                    color: inherit;\n                    font-size: 16px;\n                }\n                \n                .question-options {\n                    margin-top: 1rem;\n                    display: flex;\n                    flex-direction: column;\n                    justify-content: center;\n                    align-items: flex-start;\n                }\n                \n                .question-required {\n                    color: #ef4444;\n                    font-size: 1.5rem;\n                }\n                \n                .survey-footer {\n                    padding: 0.5rem;\n                    display: flex;\n                    flex-direction: column;\n                    justify-content: space-between;\n                    padding-top: 0;\n                }\n                \n                .survey-navigation {\n                    display: flex;\n                    width: 100%;\n                    justify-content: flex-start;\n                }\n                \n                .survey-btn {\n                    display: flex;\n                    align-items: center;\n                    gap: 0.5rem;\n                    padding: 0.5rem 1rem;\n                    border-radius: 0.375rem;\n                    cursor: pointer;\n                    font: inherit;\n                }\n                \n                .survey-btn svg {\n                    flex-shrink: 0;\n                }\n                \n                .survey-btn-outline {\n                    margin-right: 0.5rem;\n                    border: 1px solid #222222;\n                    background: #222222;\n                    color: #ffffff;\n                    opacity: 0.7;\n                }\n                \n                .survey-btn-outline:hover:not(:disabled) {\n                    opacity: 0.5;\n                }\n                \n                .survey-btn-outline svg {\n                    color: inherit;\n                }\n                \n                .survey-btn-primary {\n                    border: none;\n                    background: #222222;\n                    color: #ffffff;\n                }\n                \n                .survey-btn-primary:hover:not(:disabled) {\n                    opacity: 0.9;\n                }\n                \n                .survey-btn-primary svg {\n                    color: inherit;\n                }\n                \n                .survey-btn:disabled {\n                    opacity: 0.5;\n                    cursor: not-allowed;\n                }\n                \n                .survey-btn:not(:disabled):hover {\n                    opacity: 0.9;\n                }\n                \n                .survey-branding {\n                    margin-top: 1.5rem;\n                    width: 100%;\n                    display: flex;\n                    justify-content: flex-start;\n                }\n                \n                .survey-branding-text {\n                    display: flex;\n                    align-items: center;\n                    font-size: 0.75rem;\n                    color: #6b7280;\n                    opacity: 0.7;\n                }\n                \n                .survey-branding-text a {\n                    color: inherit;\n                }\n                \n                .radio-option {\n                    display: flex;\n                    align-items: center;\n                    gap: 0.5rem;\n                    margin-bottom: 0.5rem;\n                    cursor: pointer;\n                }\n                \n                .radio-option input[type="radio"] {\n                    margin: 0;\n                    accent-color: #3b82f6;\n                }\n                \n                .radio-option-text {\n                    font-size: 16px;\n                    color: inherit;\n                }\n                \n                .checkbox-option {\n                    display: flex;\n                    align-items: center;\n                    gap: 0.5rem;\n                    margin-bottom: 0.5rem;\n                    cursor: pointer;\n                }\n                \n                .checkbox-option input[type="checkbox"] {\n                    margin: 0;\n                    accent-color: #3b82f6;\n                }\n                \n                .checkbox-option-text {\n                    font-size: 16px;\n                    color: inherit;\n                }\n                \n                .star-rating {\n                    display: flex;\n                    justify-content: center;\n                    gap: 0.5rem;\n                }\n                \n                .star-rating-button {\n                    padding: 0.25rem;\n                    background: none;\n                    border: none;\n                    cursor: pointer;\n                    border-radius: 50%;\n                    display: flex;\n                    align-items: center;\n                    justify-content: center;\n                    outline: none;\n                    color: inherit;\n                }\n                \n                .star-rating-button:hover {\n                    transform: scale(1.1);\n                }\n                \n                .star-rating-button:focus {\n                    outline: none;\n                }\n                \n                .star-rating-button.star-selected {\n                    background: transparent;\n                }\n                \n                .star-rating-star {\n                    width: 24px;\n                    height: 24px;\n                }\n                \n                .star-rating-button:hover .star-rating-star {\n                    transform: scale(1.1);\n                }\n                \n                .long-text-input {\n                    width: 100%;\n                }\n                \n                .long-text-textarea {\n                    width: 100%;\n                    padding: 0.5rem;\n                    border: 1px solid #d1d5db;\n                    border-radius: 0.375rem;\n                    font-size: 16px;\n                    color: inherit;\n                    background: transparent;\n                    resize: none;\n                    min-height: 6rem;\n                    font: inherit;\n                }\n                \n                .statement-content {\n                    text-align: left;\n                }\n                \n                .statement-text {\n                    font-size: 18px;\n                    font-weight: 500;\n                    margin-bottom: 1rem;\n                    color: inherit;\n                }\n                \n                .yes-no-options {\n                    width: 100%;\n                }\n                \n                .error {\n                    color: #ef4444;\n                    font-size: 0.875rem;\n                    text-align: center;\n                    padding: 0.5rem;\n                    background: rgba(254,226,226,0.8);\n                    border-radius: 0.5rem;\n                    border: 1px solid rgba(252,165,165,0.5);\n                }\n                \n                @keyframes shake {\n                    0%, 100% { transform: translateX(0); }\n                    25% { transform: translateX(-2px); }\n                    75% { transform: translateX(2px); }\n                }\n                \n                @media (max-width: 400px) {\n                    .survey-card {\n                        max-width: 100%;\n                        margin: 8px;\n                        padding: 16px;\n                    }\n                    .star-rating-star {\n                        width: 20px;\n                        height: 20px;\n                    }\n                    .question-title {\n                        font-size: 16px;\n                    }\n                }\n            </style>\n        `,this.focusInput()}renderQuestion(n){switch(n.format){case"YES_NO":return this.renderYesNo(n)
case"SINGLE_CHOICE":return this.renderSingleChoice(n)
case"MULTIPLE_CHOICE":return this.renderMultipleChoice(n)
case"STAR_RATING":return this.renderStarRating(n)
case"LONG_TEXT":return this.renderLongText(n)
case"STATEMENT":return this.renderStatement(n)
default:return'<p class="error">Unsupported question type</p>'}}renderYesNo(n){const t=this.getResponse(n.id)
return`\n            <div class="yes-no-options">\n                <label class="radio-option">\n                    <input type="radio" name="q_${n.id}" value="yes" ${"yes"===t?"checked":""} onchange="window.swMinimal.setResponse('${n.id}', 'yes')">\n                    <span class="radio-option-text">${n.yesLabel||"Yes"}</span>\n                </label>\n                <label class="radio-option">\n                    <input type="radio" name="q_${n.id}" value="no" ${"no"===t?"checked":""} onchange="window.swMinimal.setResponse('${n.id}', 'no')">\n                    <span class="radio-option-text">${n.noLabel||"No"}</span>\n                </label>\n            </div>\n        `}renderSingleChoice(n){const t=this.getResponse(n.id),e=this.getResponse(n.id+"_other")
return n.options.map(i=>`\n            <label class="radio-option">\n                <input type="radio" name="q_${n.id}" value="${i.id}" ${t===i.id?"checked":""} onchange="window.swMinimal.setResponse('${n.id}', '${i.id}'); window.swMinimal.render();">\n                <span class="radio-option-text">${i.text}</span>\n            </label>\n            ${i.isOther?`\n                <div class="other-input-container" style="margin-left: 1.5rem; margin-top: 0.5rem; ${t===i.id?"":"display: none;"}">\n                    <input type="text" class="other-text-input" placeholder="Please specify..." value="${e||""}" oninput="window.swMinimal.setResponse('${n.id}_other', this.value)" style="width: 100%; padding: 0.5rem; border: 1px solid #d1d5db; border-radius: 0.375rem; font-size: 16px; color: inherit; background: transparent;">\n                </div>\n            `:""}\n        `).join("")}renderMultipleChoice(n){const t=this.getResponse(n.id),e=t?t.split(","):[],i=this.getResponse(n.id+"_other")
return n.options.map(t=>`\n            <label class="checkbox-option">\n                <input type="checkbox" value="${t.id}" ${e.includes(t.id)?"checked":""} onchange="window.swMinimal.toggleMultiple('${n.id}', '${t.id}'); window.swMinimal.render();">\n                <span class="checkbox-option-text">${t.text}</span>\n            </label>\n            ${t.isOther?`\n                <div class="other-input-container" style="margin-left: 1.5rem; margin-top: 0.5rem; ${e.includes(t.id)?"":"display: none;"}">\n                    <input type="text" class="other-text-input" placeholder="Please specify..." value="${i||""}" oninput="window.swMinimal.setResponse('${n.id}_other', this.value)" style="width: 100%; padding: 0.5rem; border: 1px solid #d1d5db; border-radius: 0.375rem; font-size: 16px; color: inherit; background: transparent;">\n                </div>\n            `:""}\n        `).join("")}renderStarRating(n){const t=this.getResponse(n.id)||0
return`\n            <div class="star-rating">\n                ${[1,2,3,4,5].map(e=>`\n                    <button type="button" class="star-rating-button ${e>t?"":"star-selected"}" \n                            onclick="window.swMinimal.setResponse('${n.id}', ${e}); window.swMinimal.render();"\n                            onmouseover="window.swMinimal.hoverStar('${n.id}', ${e})"\n                            onmouseout="window.swMinimal.unhoverStar('${n.id}')">\n                        <svg class="star-rating-star" width="24" height="24" viewBox="0 0 24 24" fill="${e>t?"none":"#fbbf24"}" stroke="${e>t?"#d1d5db":"#fbbf24"}" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">\n                            <polygon points="12,2 15.09,8.26 22,9.27 17,14.14 18.18,21.02 12,17.77 5.82,21.02 7,14.14 2,9.27 8.91,8.26 12,2"/>\n                        </svg>\n                    </button>\n                `).join("")}\n            </div>\n        `}renderLongText(n){const t=this.getResponse(n.id)||""
return`\n            <div class="long-text-input">\n                <textarea class="long-text-textarea" placeholder="" autofocus oninput="window.swMinimal.setResponse('${n.id}', this.value)">${t}</textarea>\n            </div>\n        `}renderStatement(n){return`\n            <div class="statement-content">\n                <p class="statement-text">${n.description}</p>\n            </div>\n        `}renderComplete(){this.container.innerHTML='\n            <div class="survey-widget">\n                <div class="survey-card">\n                    <div style="text-align: center; padding: 2rem;">\n                        <div style="font-size: 3rem; color: #10b981;">✓</div>\n                        <p style="margin-top: 1rem; font-size: 1.2rem;">Thank you!</p>\n                    </div>\n                </div>\n            </div>\n        ',this.isCompleted=!0,this.onComplete(this.responses),setTimeout(()=>this.onClose(),3e3)}setResponse(n,t){const e=this.responses.find(t=>t.questionId===n)
e?e.value=t:this.responses.push({questionId:n,value:t}),this.hideRequiredError()}toggleMultiple(n,t){const e=this.responses.find(t=>t.questionId===n),i=e?(e.value||"").split(",").filter(Boolean):[]
if(i.includes(t)){const r=i.filter(n=>n!==t)
r.length?e.value=r.join(","):this.responses.splice(this.responses.findIndex(t=>t.questionId===n),1)}else i.push(t),e?e.value=i.join(","):this.responses.push({questionId:n,value:i.join(",")})
this.hideRequiredError()}getResponse(n){return this.responses.find(t=>t.questionId===n)?.value||null}next(){const n=this.survey.questions[this.currentIndex]
!n.required||this.getResponse(n.id)?(this.hideRequiredError(),this.currentIndex++,this.render()):this.showRequiredError(n.id)}showRequiredError(n){const t=this.container.querySelector(".question-container")
t&&(t.style.animation="shake 0.5s ease-in-out",setTimeout(()=>{t.style.animation=""},500))}hideRequiredError(){}prev(){this.currentIndex--,this.render()}hoverStar(n,t){this.container.querySelectorAll(".star-rating-button").forEach((n,e)=>{const i=e+1,r=n.querySelector(".star-rating-star")
i>t?(r.setAttribute("fill","none"),r.setAttribute("stroke","#d1d5db")):(r.setAttribute("fill","#fbbf24"),r.setAttribute("stroke","#fbbf24"))})}unhoverStar(n){const t=this.getResponse(n)||0
this.container.querySelectorAll(".star-rating-button").forEach((n,e)=>{const i=e+1,r=n.querySelector(".star-rating-star")
i>t?(r.setAttribute("fill","none"),r.setAttribute("stroke","#d1d5db")):(r.setAttribute("fill","#fbbf24"),r.setAttribute("stroke","#fbbf24"))})}focusInput(){setTimeout(()=>{if("LONG_TEXT"===this.survey.questions[this.currentIndex].format){const n=this.container.querySelector(".long-text-textarea")
if(n)return void n.focus()}const n=this.container.querySelector(".other-text-input")
n&&null!==n.offsetParent&&n.focus()},50)}close(){this.onClose(),this.container.innerHTML=""}mount(n){this.container=document.getElementById(n),this.render()}}window.initSurveyWidgetMinimal=t=>(window.swMinimal=new n(t),window.swMinimal)
