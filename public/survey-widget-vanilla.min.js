class SurveyWidget{constructor(n={}){this.surveyId=n.surveyId,this.surveyData=n.surveyData,this.testMode=n.testMode||!1,this.onComplete=n.onComplete||(()=>{}),this.onError=n.onError||(()=>{}),this.onClose=n.onClose||(()=>{}),this.container=null,this.survey=null,this.currentQuestionIndex=0,this.responses=[],this.otherText={},this.isLoading=!0,this.isSubmitting=!1,this.isCompleted=!1,this.requiredError=null,this.init()}async init(){try{this.surveyData?(this.survey=this.surveyData,this.isLoading=!1,this.container&&this.render()):this.surveyId?await this.loadSurvey():this.onError("Either surveyId or surveyData must be provided")}catch(n){this.onError(n.message||"Failed to initialize survey")}}async loadSurvey(){try{if(!this.surveyData)throw new Error("Survey loading not implemented in vanilla version");this.survey=this.surveyData,this.isLoading=!1,this.container&&this.render()}catch(n){this.onError(n.message||"Failed to load survey")}}render(){this.container?this.isLoading?this.renderLoading():this.isCompleted?this.renderCompleted():this.survey?"published"===this.survey.status||this.testMode?this.renderSurvey():this.renderError("This survey is not available"):this.renderError("Survey not found"):console.error("SurveyWidget: Container not set, cannot render")}renderLoading(){this.container?this.container.innerHTML='\n            <div class="survey-loading">\n                <div class="survey-spinner"></div>\n            </div>\n        ':console.error("SurveyWidget: Container not set, cannot render loading state")}renderError(n){this.container?this.container.innerHTML=`\n            <div class="survey-error">\n                <p class="survey-error-message">${n}</p>\n            </div>\n        `:console.error("SurveyWidget: Container not set, cannot render error state")}renderCompleted(){if(!this.container)return void console.error("SurveyWidget: Container not set, cannot render completed state");const n=this.survey?.style||this.getDefaultStyle(),e=this.widgetId?`window.${this.widgetId}`:"window.surveyWidget";this.container.innerHTML=`\n            <div class="survey-widget" style="min-width: 300px; min-height: 300px;">\n                <div class="survey-card" style="\n                    --survey-bg-color: ${"transparent"===n.backgroundColor?"transparent":n.backgroundColor};\n                    --survey-text-color: ${n.textColor};\n                    --survey-button-bg: ${n.buttonBackgroundColor};\n                    --survey-button-text: ${n.buttonTextColor};\n                    --survey-font-family: ${n.fontFamily};\n                    --survey-border: ${n.border};\n                    --survey-border-radius: ${n.borderRadius};\n                    --survey-margin: ${n.margin};\n                    --survey-padding: ${n.padding};\n                    --survey-title-size: ${n.titleFontSize};\n                    --survey-body-size: ${n.bodyFontSize};\n                    --survey-accent-color: ${n.accentColor||"#3b82f6"};\n                    --survey-error-color: ${n.errorColor||"#ef4444"};\n                    --survey-border-color: ${n.borderColor||"#d1d5db"};\n                    background-color: var(--survey-bg-color);\n                    font-family: var(--survey-font-family);\n                    border: var(--survey-border);\n                    border-radius: var(--survey-border-radius);\n                    margin: var(--survey-margin);\n                    padding: var(--survey-padding);\n                ">\n                    <div class="survey-close-btn" onclick="${e}.handleClose()">\n                        <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">\n                            <path d="M18 6L6 18"/>\n                            <path d="M6 6l12 12"/>\n                        </svg>\n                    </div>\n                    \n                    <div class="completion-container">\n                        <div class="completion-animation">\n                            <div class="success-circle">\n                                <div class="success-checkmark">\n                                    <div class="checkmark-stem"></div>\n                                    <div class="checkmark-kick"></div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    \n                    <div class="survey-footer">\n                        <div class="survey-branding">\n                            <div class="survey-branding-text">\n                                <p>Powered by <a href="https://opineeo.com" target="_blank" style="color: var(--survey-text-color);"><strong>Opineeo</strong></a></p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        `,this.addCompletionStyles(),setTimeout(()=>{this.handleClose()},8e3)}addCompletionStyles(){if(document.getElementById("survey-completion-styles"))return;const n=document.createElement("style");n.id="survey-completion-styles",n.textContent="\n            /* Completion container */\n            .completion-container {\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                justify-content: center;\n                padding: 2rem;\n                min-height: 250px;\n                position: relative;\n            }\n\n            /* Completion animation */\n            .completion-animation {\n                margin-bottom: 2rem;\n                position: relative;\n            }\n\n            /* Success circle */\n            .success-circle {\n                width: 80px;\n                height: 80px;\n                border-radius: 50%;\n                background: linear-gradient(135deg, #10b981, #059669);\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                position: relative;\n                animation: scaleIn 0.6s cubic-bezier(0.68, -0.55, 0.265, 1.55);\n                box-shadow: 0 8px 25px rgba(16, 185, 129, 0.3);\n            }\n\n            .success-circle::before {\n                content: '';\n                position: absolute;\n                width: 100px;\n                height: 100px;\n                border-radius: 50%;\n                background: linear-gradient(135deg, #10b981, #059669);\n                opacity: 0.3;\n                animation: pulse 2s infinite;\n            }\n\n            /* Success checkmark */\n            .success-checkmark {\n                position: relative;\n                width: 24px;\n                height: 24px;\n                transform: rotate(45deg);\n                z-index: 2;\n            }\n\n            .checkmark-stem {\n                position: absolute;\n                width: 5px;\n                height: 25px;\n                background-color: white;\n                left: 15px;\n                top: -3px;\n                border-radius: 2px;\n                animation: checkmarkStem 0.4s ease-in-out 0.3s both;\n            }\n\n            .checkmark-kick {\n                position: absolute;\n                width: 15px;\n                height: 5px;\n                background-color: white;\n                left: 4px;\n                top: 17px;\n                border-radius: 2px;\n                animation: checkmarkKick 0.4s ease-in-out 0.5s both;\n            }\n\n\n            /* Animations */\n            @keyframes scaleIn {\n                0% {\n                    transform: scale(0);\n                    opacity: 0;\n                }\n                100% {\n                    transform: scale(1);\n                    opacity: 1;\n                }\n            }\n\n            @keyframes pulse {\n                0%, 100% {\n                    transform: scale(1);\n                    opacity: 0.3;\n                }\n                50% {\n                    transform: scale(1.1);\n                    opacity: 0.1;\n                }\n            }\n\n            @keyframes checkmarkStem {\n                0% {\n                    height: 0;\n                }\n                100% {\n                    height: 25px;\n                }\n            }\n\n            @keyframes checkmarkKick {\n                0% {\n                    width: 0;\n                }\n                100% {\n                    width: 15px;\n                }\n            }\n\n            @keyframes fadeInUp {\n                0% {\n                    opacity: 0;\n                    transform: translateY(20px);\n                }\n                100% {\n                    opacity: 1;\n                    transform: translateY(0);\n                }\n            }\n\n            /* Responsive adjustments */\n            @media (max-width: 400px) {\n                .success-circle {\n                    width: 60px;\n                    height: 60px;\n                }\n                \n                .success-circle::before {\n                    width: 80px;\n                    height: 80px;\n                }\n                \n                .checkmark-stem {\n                    width: 2px;\n                    height: 10px;\n                    left: 7px;\n                    top: 3px;\n                }\n                \n                .checkmark-kick {\n                    width: 6px;\n                    height: 2px;\n                    left: 4px;\n                    top: 9px;\n                }\n            }\n        ",document.head.appendChild(n)}renderSurvey(){if(!this.container)return;if(!this.survey?.questions||0===this.survey.questions.length)return void this.renderError("No questions available");const n=this.survey.questions[this.currentQuestionIndex];if(!n)return void this.renderError("Question not found");const e=this.currentQuestionIndex===this.survey.questions.length-1,t=0===this.currentQuestionIndex,r=this.survey.style||this.getDefaultStyle(),i=this.widgetId?`window.${this.widgetId}`:"window.surveyWidget";this.container.innerHTML=`\n            <div class="survey-widget" style="min-width: 300px; min-height: 300px;">\n                <div class="survey-card" style="\n                    --survey-bg-color: ${"transparent"===r.backgroundColor?"transparent":r.backgroundColor};\n                    --survey-text-color: ${r.textColor};\n                    --survey-button-bg: ${r.buttonBackgroundColor};\n                    --survey-button-text: ${r.buttonTextColor};\n                    --survey-font-family: ${r.fontFamily};\n                    --survey-border: ${r.border};\n                    --survey-border-radius: ${r.borderRadius};\n                    --survey-margin: ${r.margin};\n                    --survey-padding: ${r.padding};\n                    --survey-title-size: ${r.titleFontSize};\n                    --survey-body-size: ${r.bodyFontSize};\n                    --survey-accent-color: ${r.accentColor||"#3b82f6"};\n                    --survey-error-color: ${r.errorColor||"#ef4444"};\n                    --survey-border-color: ${r.borderColor||"#d1d5db"};\n                    --survey-outline-bg: ${r.outlineButtonBg||"rgba(255, 255, 255, 0.8)"};\n                    --survey-outline-text: ${r.outlineButtonText||"#374151"};\n                    --survey-outline-hover-bg: ${r.outlineButtonHoverBg||"#f9fafb"};\n                    --survey-outline-hover-border: ${r.outlineButtonHoverBorder||"#9ca3af"};\n                    --survey-input-border: ${r.inputBorder||"#d1d5db"};\n                    --survey-input-radius: ${r.inputRadius||"0.375rem"};\n                    --survey-input-bg: ${r.inputBg||"transparent"};\n                    background-color: var(--survey-bg-color);\n                    font-family: var(--survey-font-family);\n                    border: var(--survey-border);\n                    border-radius: var(--survey-border-radius);\n                    margin: var(--survey-margin);\n                    padding: var(--survey-padding);\n                ">\n                    <div class="survey-close-btn" onclick="${i}.handleClose()">\n                        <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">\n                            <path d="M18 6L6 18"/>\n                            <path d="M6 6l12 12"/>\n                        </svg>\n                    </div>\n                    \n                    <div class="survey-content">\n                        <div class="question-transition-container">\n                            ${this.renderQuestion(n,r,i)}\n                        </div>\n                    </div>\n                    \n                    <div class="survey-footer">\n                        <div class="survey-navigation">\n                            <button class="survey-btn survey-btn-outline survey-btn-previous" \n                                    onclick="${i}.handlePrevious()" \n                                    ${t?"disabled":""}>\n                                <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">\n                                    <path d="m15 18-6-6 6-6"/>\n                                </svg>\n                            </button>\n                            \n                            <button class="survey-btn survey-btn-primary survey-btn-next" \n                                    onclick="${i}.handleNext()" \n                                    ${this.isSubmitting?"disabled":""}>\n                                ${this.isSubmitting?this.getSpinnerIcon():e?this.getSendIcon():this.getNextArrowIcon()}\n                            </button>\n                        </div>\n                        \n                        <div class="survey-branding">\n                            <div class="survey-branding-text">\n                                <p>Powered by <a href="https://opineeo.com" target="_blank" style="color: var(--survey-text-color);"><strong>Opineeo</strong></a></p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        `,this.addStyles()}renderQuestion(n,e,t="window.surveyWidget"){if(!n)return"";const r=this.responses.find(e=>e.questionId===n.id),i=n.required;return`\n            <div class="question-container ${this.requiredError===n.id?"question-error":""}">\n                <h2 class="question-title">\n                    ${n.title} ${i?'<span class="question-required">*</span>':""}\n                </h2>\n                \n                ${n.description&&"STATEMENT"!==n.format?`\n                    <p class="question-description">\n                        ${n.description}\n                    </p>\n                `:""}\n                \n                <div class="question-options">\n                    ${this.renderQuestionOptions(n,r,e,t)}\n                </div>\n            \n            </div>\n        `}renderQuestionOptions(n,e,t,r="window.surveyWidget"){switch(n.format){case"YES_NO":return this.renderYesNoOptions(n,e,r);case"SINGLE_CHOICE":return this.renderSingleChoiceOptions(n,e,r);case"MULTIPLE_CHOICE":return this.renderMultipleChoiceOptions(n,e,r);case"STAR_RATING":return this.renderStarRatingOptions(n,e,r);case"LONG_TEXT":return this.renderLongTextOptions(n,e,r);case"STATEMENT":return this.renderStatementOptions(n);default:return"<p>Unsupported question format</p>"}}renderYesNoOptions(n,e,t="window.surveyWidget"){const r=!0===e?.booleanValue?"true":"",i=!1===e?.booleanValue?"false":"";return`\n            <div class="yes-no-options">\n                <label class="radio-option">\n                    <input type="radio" \n                           name="question_${n.id}" \n                           value="true" \n                           ${r?"checked":""}\n                           onchange="${t}.handleResponseChange('${n.id}', true, undefined, false)">\n                    <span class="radio-option-text">${n.yesLabel||"Yes"}</span>\n                </label>\n                \n                <label class="radio-option">\n                    <input type="radio" \n                           name="question_${n.id}" \n                           value="false" \n                           ${i?"checked":""}\n                           onchange="${t}.handleResponseChange('${n.id}', false, undefined, false)">\n                    <span class="radio-option-text">${n.noLabel||"No"}</span>\n                </label>\n            </div>\n        `}renderSingleChoiceOptions(n,e,t="window.surveyWidget"){let r=n.options.filter(n=>!n.isOther).map(r=>{const i=e?.optionId===r.id;return`\n                <label class="radio-option">\n                    <input type="radio" \n                           name="question_${n.id}" \n                           value="${r.id}" \n                           ${i?"checked":""}\n                           onchange="${t}.handleResponseChange('${n.id}', '${r.id}', '${r.id}', false)">\n                    <span class="radio-option-text">${r.text}</span>\n                </label>\n            `}).join("");const i=n.options.find(n=>n.isOther);if(i){const o=e?.optionId===i.id;r+=`\n                <label class="radio-option">\n                    <input type="radio" \n                           name="question_${n.id}" \n                           value="${i.id}" \n                           ${o?"checked":""}\n                           onchange="${t}.handleResponseChange('${n.id}', '${i.id}', '${i.id}', false)">\n                    <span class="radio-option-text">${i.text}</span>\n                </label>\n                \n                ${o?`\n                    <div class="other-input">\n                        <input type="text" \n                               class="other-input-field"\n                               placeholder="Please specify..." \n                               value="${this.otherText[n.id]||""}"\n                               oninput="${t}.handleOtherTextChangeImmediate('${n.id}', this.value)">\n                    </div>\n                `:""}\n            `}return r}renderMultipleChoiceOptions(n,e,t="window.surveyWidget"){const r=e?.optionId?.split(",")||[];let i=n.options.filter(n=>!n.isOther).map((e,i)=>{const o=e.id||`option_${i}`;return`\n                <label class="checkbox-option">\n                    <input type="checkbox" \n                           value="${o}" \n                           ${r.includes(o)?"checked":""}\n                           onchange="${t}.handleMultipleChoiceChange('${n.id}', '${o}', this.checked)">\n                    <span class="checkbox-option-text">${e.text}</span>\n                </label>\n            `}).join("");const o=n.options.find(n=>n.isOther);if(o){const e=o.id||"option_other",s=r.includes(e);i+=`\n                <label class="checkbox-option">\n                    <input type="checkbox" \n                           value="${e}" \n                           ${s?"checked":""}\n                           onchange="${t}.handleMultipleChoiceChange('${n.id}', '${e}', this.checked)">\n                    <span class="checkbox-option-text">${o.text}</span>\n                </label>\n                \n                ${s?`\n                    <div class="other-input">\n                        <input type="text" \n                               class="other-input-field"\n                               placeholder="Please specify..." \n                               value="${this.otherText[n.id]||""}"\n                               oninput="${t}.handleOtherTextChangeImmediate('${n.id}', this.value)">\n                    </div>\n                `:""}\n            `}return i}renderStarRatingOptions(n,e,t="window.surveyWidget"){const r=e?.numberValue||0;return`\n            <div class="star-rating">\n                ${[1,2,3,4,5].map(e=>`\n                    <button type="button" \n                            class="star-rating-button ${e<=r?"star-selected":""}"\n                            onclick="${t}.handleResponseChange('${n.id}', ${e})">\n                        <svg class="star-rating-star" width="24" height="24" viewBox="0 0 24 24" fill="${e<=r?"#fbbf24":"none"}" stroke="${e<=r?"#fbbf24":"currentColor"}" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" style="\n                            color: ${e<=r?"#fbbf24":"#d1d5db"};\n                        ">\n                            <polygon points="12,2 15.09,8.26 22,9.27 17,14.14 18.18,21.02 12,17.77 5.82,21.02 7,14.14 2,9.27 8.91,8.26 12,2"/>\n                        </svg>\n                    </button>\n                `).join("")}\n            </div>\n        `}renderLongTextOptions(n,e,t="window.surveyWidget"){return`\n            <div class="long-text-input">\n                <textarea \n                    class="long-text-textarea"\n                    placeholder=""\n                    oninput="${t}.handleResponseChange('${n.id}', this.value, undefined, false, true)"\n                >${e?.textValue||""}</textarea>\n            </div>\n        `}renderStatementOptions(n){return`\n            <div class="statement-content">\n                <p class="statement-text">${n.description}</p>\n            </div>\n        `}handleResponseChange(n,e,t,r=!1,i=!1){const o=this.responses.findIndex(e=>e.questionId===n),s=t||(o>=0?this.responses[o].optionId:void 0),a={questionId:n,optionId:s,textValue:"string"==typeof e?e:void 0,numberValue:"number"==typeof e?e:void 0,booleanValue:"boolean"==typeof e?e:void 0,isOther:r};o>=0?this.responses[o]=a:this.responses.push(a),r||delete this.otherText[n],this.requiredError===n&&(this.requiredError=null),i||this.render()}handleMultipleChoiceChange(n,e,t){const r=this.responses.find(e=>e.questionId===n);if(r){const n=r.optionId?r.optionId.split(","):[];if(t)n.includes(e)||n.push(e);else{const t=n.filter(n=>n!==e);r.optionId=t.length>0?t.join(","):void 0}t&&(r.optionId=n.join(","))}else t&&this.responses.push({questionId:n,optionId:e});const i=this.survey.questions[this.currentQuestionIndex],o=i?.options.find(n=>(n.id||`option_${i.options.indexOf(n)}`)===e)?.isOther;o&&!t&&delete this.otherText[n],this.requiredError===n&&(this.requiredError=null),this.render()}handleOtherTextChange(n,e){this.otherText[n]=e,this.handleResponseChange(n,e,void 0,!0)}handleOtherTextChangeImmediate(n,e){this.otherText[n]=e,this.handleResponseChange(n,e,void 0,!0,!0)}handleClose(){this.onClose(),this.unmount()}handleNext(){if(!this.survey?.questions||0===this.survey.questions.length)return void this.onError("No questions available");const n=this.survey.questions[this.currentQuestionIndex];if(n?.required&&!this.responses.some(e=>e.questionId===n.id))return this.requiredError=n.id,void this.render();this.requiredError=null,this.currentQuestionIndex===this.survey.questions.length-1?this.handleSubmit():this.transitionToNext()}handlePrevious(){this.currentQuestionIndex>0&&this.transitionToPrevious()}transitionToNext(){this.transitionToQuestion(this.currentQuestionIndex+1,"right")}transitionToPrevious(){this.transitionToQuestion(this.currentQuestionIndex-1,"left")}transitionToQuestion(n,e){if(!this.container)return;const t=this.container.querySelector(".question-transition-container");if(!t)return this.currentQuestionIndex=n,void this.render();const r="right"===e?"question-exit-right":"question-exit-left";t.classList.add(r),setTimeout(()=>{this.currentQuestionIndex=n;const i=this.survey.questions[this.currentQuestionIndex];if(i){const n=this.survey.style||this.getDefaultStyle(),o=this.widgetId?`window.${this.widgetId}`:"window.surveyWidget";t.innerHTML=this.renderQuestion(i,n,o),t.classList.remove(r);const s="right"===e?"question-enter-right":"question-enter-left";t.classList.add(s),setTimeout(()=>{t.classList.remove(s)},300)}},200)}async handleSubmit(){if(this.testMode)this.onComplete(this.responses);else{this.isSubmitting=!0,this.render();try{await new Promise(n=>setTimeout(n,1e3)),this.onComplete(this.responses),this.isCompleted=!0}catch(n){this.onError(n.message||"Failed to submit survey")}finally{this.isSubmitting=!1,this.render()}}}getDefaultStyle(){return{backgroundColor:"transparent",textColor:"#222222",buttonBackgroundColor:"#222222",buttonTextColor:"#ffffff",margin:"16px 0px",padding:"16px",border:"1px solid #222222",borderRadius:"6px",titleFontSize:"18px",bodyFontSize:"16px",fontFamily:"Inter",accentColor:"#3b82f6",errorColor:"#ef4444",borderColor:"#d1d5db",outlineButtonBg:"rgba(255, 255, 255, 0.8)",outlineButtonText:"#374151",outlineButtonHoverBg:"#f9fafb",outlineButtonHoverBorder:"#9ca3af",inputBorder:"#d1d5db",inputRadius:"0.375rem",inputBg:"#ffffff"}}getNextArrowIcon(){return'<svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">\n                    <path d="m9 18 6-6-6-6"/>\n                </svg>'}getSendIcon(){return'<svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">\n                    <path d="m22 2-7 20-4-9-9-4Z"/>\n                    <path d="M22 2 11 13"/>\n                </svg>'}getSpinnerIcon(){return'<svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="spinner">\n                    <path d="M21 12a9 9 0 1 1-6.219-8.56"/>\n                </svg>'}addStyles(){if(document.getElementById("survey-widget-styles"))return;const n=document.createElement("style");n.id="survey-widget-styles",n.textContent='\n            @keyframes spin {\n                to { transform: rotate(360deg); }\n            }\n            \n            /* Question transition animations */\n            @keyframes slideOutRight {\n                0% { \n                    transform: translateX(0); \n                    opacity: 1; \n                }\n                100% { \n                    transform: translateX(50%); \n                    opacity: 0; \n                }\n            }\n            \n            @keyframes slideInRight {\n                0% { \n                    transform: translateX(-50%); \n                    opacity: 0; \n                }\n                100% { \n                    transform: translateX(0); \n                    opacity: 1; \n                }\n            }\n            \n            @keyframes slideOutLeft {\n                0% { \n                    transform: translateX(0); \n                    opacity: 1; \n                }\n                100% { \n                    transform: translateX(-50%); \n                    opacity: 0; \n                }\n            }\n            \n            @keyframes slideInLeft {\n                0% { \n                    transform: translateX(50%); \n                    opacity: 0; \n                }\n                100% { \n                    transform: translateX(0); \n                    opacity: 1; \n                }\n            }\n            \n            .survey-widget * {\n                box-sizing: border-box;\n            }\n            \n            /* Main widget container */\n            .survey-widget {\n                min-width: 300px;\n                min-height: 300px;\n            }\n            \n            /* Card container */\n            .survey-card {\n                box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);\n                max-width: 300px;\n                min-height: 300px;\n                display: flex;\n                flex-direction: column;\n                justify-content: space-between;\n                overflow: hidden;\n                position: relative;\n            }\n            \n            /* Close button */\n            .survey-close-btn {\n                position: absolute;\n                top: 0.25rem;\n                right: 0.25rem;\n                width: 32px;\n                height: 32px;\n                border-radius: 50%;\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                cursor: pointer;\n                transition: all 0.2s ease;\n                z-index: 10;\n                opacity: 0.7;\n            }\n            \n            .survey-close-btn:hover {\n                opacity: 1;\n            }\n            \n            .survey-close-btn svg {\n                color: var(--survey-text-color, #222222);\n                transition: all 0.2s ease;\n            }\n            \n            /* Content area */\n            .survey-content {\n                padding: 0.5rem;\n                margin-bottom: 1rem;\n                overflow: hidden;\n                position: relative;\n            }\n            \n            /* Question transition container */\n            .question-transition-container {\n                position: relative;\n                overflow: hidden;\n                min-height: 200px;\n                width: 100%;\n                height: auto;\n            }\n            \n            /* Ensure question content stays within bounds during transitions */\n            .question-transition-container .question-container {\n                position: relative;\n                width: 100%;\n                height: auto;\n            }\n            \n            /* Transition animation classes */\n            .question-exit-right {\n                animation: slideOutRight 0.2s ease-out forwards;\n            }\n            \n            .question-enter-right {\n                animation: slideInRight 0.3s ease-out forwards;\n            }\n            \n            .question-exit-left {\n                animation: slideOutLeft 0.2s ease-out forwards;\n            }\n            \n            .question-enter-left {\n                animation: slideInLeft 0.3s ease-out forwards;\n            }\n            \n            /* Footer area */\n            .survey-footer {\n                padding: 0.5rem;\n                display: flex;\n                flex-direction: column;\n                justify-content: space-between;\n                padding-top: 0;\n            }\n            \n            /* Navigation buttons */\n            .survey-navigation {\n                display: flex;\n                width: 100%;\n                justify-content: flex-start;\n            }\n            \n            .survey-btn {\n                display: flex;\n                align-items: center;\n                gap: 0.5rem;\n                padding: 0.5rem 1rem;\n                border-radius: 0.375rem;\n                cursor: pointer;\n                transition: opacity 0.2s;\n            }\n            \n            .survey-btn svg {\n                flex-shrink: 0;\n            }\n            \n            .spinner {\n                animation: spin 1s linear infinite;\n            }\n            \n            .survey-btn-outline {\n                margin-right: 0.5rem;\n                border: 1px solid var(--survey-button-bg, #222222);\n                background-color: var(--survey-button-bg, #222222);\n                color: var(--survey-button-text, #ffffff);\n                opacity: 0.7;\n            }\n            \n            .survey-btn-outline:hover:not(:disabled) {\n                background-color: var(--survey-button-bg, #222222);\n                border-color: var(--survey-button-bg, #222222);\n                opacity: 0.5;\n            }\n            \n            .survey-btn-outline svg {\n                color: var(--survey-button-text, #ffffff);\n            }\n            \n            .survey-btn-primary {\n                border: none;\n                background-color: var(--survey-button-bg, #222222);\n                color: var(--survey-button-text, #ffffff);\n            }\n            \n            .survey-btn-primary:hover:not(:disabled) {\n                opacity: 0.9;\n            }\n            \n            .survey-btn-primary svg {\n                color: var(--survey-button-text, #ffffff);\n            }\n            \n            .survey-btn:disabled {\n                opacity: 0.5;\n                cursor: not-allowed;\n            }\n            \n            .survey-btn:not(:disabled):hover {\n                opacity: 0.9;\n            }\n            \n            /* Branding */\n            .survey-branding {\n                margin-top: 1.5rem;\n                width: 100%;\n                display: flex;\n                justify-content: flex-start;\n            }\n            \n            .survey-branding-text {\n                display: flex;\n                align-items: center;\n                font-size: 0.75rem;\n                color: #6b7280;\n            }\n            \n            /* Loading state */\n            .survey-loading {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                padding: 2rem;\n            }\n            \n            .survey-spinner {\n                width: 2rem;\n                height: 2rem;\n                border: 2px solid #e5e7eb;\n                border-top: 2px solid #3b82f6;\n                border-radius: 50%;\n                animation: spin 1s linear infinite;\n            }\n            \n            /* Error state */\n            .survey-error {\n                text-align: center;\n                padding: 2rem;\n                color: #6b7280;\n            }\n            \n            .survey-error-message {\n                margin: 0;\n            }\n            \n            /* Question elements */\n            .question-container {\n                width: 100%;\n                height: 100%;\n                padding: 0 4px; /* Add padding to prevent shake from cutting off */\n            }\n            \n            .question-title {\n                font-weight: 600;\n                margin-bottom: 0.5rem;\n                color: var(--survey-text-color, #222222);\n                font-size: var(--survey-title-size, 18px);\n            }\n            \n            .question-description {\n                opacity: 0.8;\n                margin-bottom: 1rem;\n                color: var(--survey-text-color, #222222);\n                font-size: var(--survey-body-size, 16px);\n            }\n            \n            .question-options {\n                margin-top: 1rem;\n                display: flex;\n                flex-direction: column;\n                justify-content: center;\n                align-items: flex-start;\n            }\n            \n            .question-required {\n                color: var(--survey-error-color, #ef4444);\n                font-size: 1.5rem;\n            }\n            \n            /* Question error state */\n            .question-container.question-error {\n                animation: shake 0.5s ease-in-out;\n            }\n            \n            .question-error-message {\n                display: flex;\n                align-items: center;\n                gap: 0.5rem;\n                margin-top: 0.75rem;\n                padding: 0.75rem;\n                background-color: rgba(239, 68, 68, 0.1);\n                border: 1px solid var(--survey-error-color, #ef4444);\n                border-radius: 0.375rem;\n                color: var(--survey-error-color, #ef4444);\n                font-size: 0.875rem;\n                font-weight: 500;\n            }\n            \n            .question-error-message svg {\n                flex-shrink: 0;\n            }\n            \n            @keyframes shake {\n                0%, 100% { transform: translateX(0); }\n                25% { transform: translateX(-2px); }\n                75% { transform: translateX(2px); }\n            }\n            \n            /* Radio options */\n            .radio-option {\n                display: flex;\n                align-items: center;\n                gap: 0.5rem;\n                margin-bottom: 0.5rem;\n                cursor: pointer;\n            }\n            \n            .radio-option input[type="radio"] {\n                margin: 0;\n                accent-color: var(--survey-accent-color, #3b82f6);\n            }\n            \n            .radio-option-text {\n                font-size: var(--survey-body-size, 1rem);\n                color: var(--survey-text-color, #222222);\n            }\n            \n            /* Checkbox options */\n            .checkbox-option {\n                display: flex;\n                align-items: center;\n                gap: 0.5rem;\n                margin-bottom: 0.5rem;\n                cursor: pointer;\n            }\n            \n            .checkbox-option input[type="checkbox"] {\n                margin: 0;\n                accent-color: var(--survey-accent-color, #3b82f6);\n            }\n            \n            .checkbox-option-text {\n                font-size: var(--survey-body-size, 1rem);\n                color: var(--survey-text-color, #222222);\n            }\n            \n            /* Other input */\n            .other-input {\n                margin-top: 0.5rem;\n            }\n            \n            .other-input-field {\n                width: 100%;\n                padding: 0.5rem;\n                border: 1px solid var(--survey-input-border, #d1d5db);\n                border-radius: var(--survey-input-radius, 0.375rem);\n                font-size: var(--survey-body-size, 1rem);\n                color: var(--survey-text-color, #222222);\n                background-color: var(--survey-input-bg, #ffffff);\n            }\n            \n            /* Star rating */\n            .star-rating {\n                display: flex;\n                justify-content: center;\n                gap: 0.5rem;\n            }\n            \n            .star-rating-button {\n                padding: 0.25rem;\n                background: none;\n                border: none;\n                cursor: pointer;\n                border-radius: 50%;\n                transition: all 0.2s ease;\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                outline: none;\n            }\n            \n            .star-rating-button:hover {\n                transform: scale(1.1);\n            }\n            \n            .star-rating-button:focus {\n                outline: none;\n            }\n            \n            .star-rating-button.star-selected {\n                background-color: transparent;\n            }\n            \n            .star-rating-star {\n                width: 30px;\n                height: 30px;\n                transition: all 0.2s ease;\n            }\n            \n            .star-rating-button:hover .star-rating-star {\n                transform: scale(1.1);\n            }\n            \n            /* Long text input */\n            .long-text-input {\n                width: 100%;\n            }\n            \n            .long-text-textarea {\n                width: 100%;\n                padding: 0.5rem;\n                border: 1px solid var(--survey-input-border, #d1d5db);\n                border-radius: var(--survey-input-radius, 0.375rem);\n                font-size: var(--survey-body-size, 0.75rem);\n                color: var(--survey-text-color, #222222);\n                background-color: var(--survey-input-bg, transparent);\n                resize: none;\n                min-height: 6rem;\n            }\n            \n            /* Statement */\n            .statement-content {\n                text-align: left;\n            }\n            \n            .statement-text {\n                font-size: var(--survey-title-size, 1.125rem);\n                font-weight: 500;\n                margin-bottom: 1rem;\n                color: var(--survey-text-color, #222222);\n            }\n            \n            /* Yes/No options */\n            .yes-no-options {\n                width: 100%;\n            }\n        ',document.head.appendChild(n)}mount(n){if(this.container=document.getElementById(n),!this.container)throw new Error(`Container with id "${n}" not found`);this.render()}unmount(){this.container&&(this.container.innerHTML=""),this.container=null}getResponses(){return this.responses}setSurveyData(n){this.surveyData=n,this.survey=n,this.isLoading=!1,this.currentQuestionIndex=0,this.responses=[],this.otherText={},this.isCompleted=!1,this.container&&this.render()}setContainer(n){this.container=n,this.container&&this.render()}goToQuestion(n){if(this.survey?.questions&&n>=0&&n<this.survey.questions.length){const e=n>this.currentQuestionIndex?"right":"left";this.transitionToQuestion(n,e)}else console.error("Invalid question index:",n)}getCurrentQuestionIndex(){return this.currentQuestionIndex}getTotalQuestions(){return this.survey?.questions?.length||0}}window.initSurveyWidget=function(n){const e=new SurveyWidget(n),t="surveyWidget_"+Date.now()+"_"+Math.random().toString(36).substr(2,9);return window[t]=e,e.widgetId=t,e},document.addEventListener("DOMContentLoaded",function(){document.querySelectorAll("[data-survey-widget]").forEach((n,e)=>{const t=n.getAttribute("data-survey-id"),r="true"===n.getAttribute("data-test-mode"),i=new SurveyWidget({surveyId:t,testMode:r,onComplete:n=>{},onError:n=>{console.error("Survey error:",n)},onClose:()=>{}}),o="surveyWidget_auto_"+e+"_"+Date.now();window[o]=i,i.widgetId=o,i.setContainer(n)})}),"undefined"!=typeof module&&module.exports&&(module.exports=SurveyWidget);